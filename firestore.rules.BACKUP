rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
      // ========================================
    // FUNCIONES AUXILIARES
    // ========================================
    
    // Verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Obtener el rol del usuario desde su documento
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Verificar si el usuario es admin
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    // Verificar si el usuario es responsable
    function isResponsable() {
      return isAuthenticated() && getUserRole() == 'responsable';
    }
    
    // Verificar si el usuario es secretaria
    function isSecretaria() {
      return isAuthenticated() && getUserRole() == 'secretaria';
    }
    
    // Verificar si el usuario es docente
    function isDocente() {
      return isAuthenticated() && getUserRole() == 'docente';
    }
    
    // Verificar si el usuario es admin o responsable
    function isAdminOrResponsable() {
      return isAdmin() || isResponsable();
    }
    
    // ========================================
    // COLECCIÓN: users
    // ========================================
    match /users/{userId} {
      // Todos pueden leer usuarios (necesario para mensajería)
      allow read: if isAuthenticated();
      
      // Solo el propio usuario puede actualizar su perfil
      // Admin puede crear y editar todos los usuarios
      allow create: if isAdmin();
      allow update: if isAuthenticated() && 
                       (request.auth.uid == userId || isAdmin());
      
      // Solo admin puede eliminar usuarios
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: schools (Escuelas)
    // ========================================
    match /schools/{schoolId} {
      // Admin y Responsable pueden leer escuelas
      // Responsable solo ve las escuelas asignadas (filtrado en cliente)
      allow read: if isAdminOrResponsable();
      
      // Admin y Responsable pueden crear escuelas
      allow create: if isAdminOrResponsable();
      
      // Admin y Responsable pueden editar escuelas
      // Responsable solo edita sus escuelas (validado en cliente)
      allow update: if isAdminOrResponsable();
      
      // Solo Admin puede eliminar escuelas
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: teachers (Docentes)
    // ========================================
    match /teachers/{teacherId} {
      // Admin y Responsable pueden leer docentes
      // Responsable solo ve docentes de sus escuelas (filtrado en cliente)
      allow read: if isAdminOrResponsable();
      
      // Admin y Responsable pueden crear docentes
      allow create: if isAdminOrResponsable();
      
      // Admin y Responsable pueden editar docentes
      allow update: if isAdminOrResponsable();
      
      // Solo Admin puede eliminar docentes
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: conversations (Conversaciones)
    // ========================================
    match /conversations/{conversationId} {
      // Solo participantes pueden leer la conversación
      allow read: if isAuthenticated() && 
                     request.auth.uid in resource.data.participants;
      
      // Cualquier usuario autenticado puede crear conversaciones
      allow create: if isAuthenticated() && 
                       request.auth.uid in request.resource.data.participants;
      
      // Solo participantes pueden actualizar la conversación
      allow update: if isAuthenticated() && 
                       request.auth.uid in resource.data.participants;
      
      // Solo Admin puede eliminar conversaciones
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: messages (Mensajes)
    // ========================================
    match /messages/{messageId} {
      // Todos los usuarios autenticados pueden leer mensajes
      // (el filtrado por conversación se hace en el cliente)
      allow read: if isAuthenticated();
      
      // Cualquier usuario puede crear mensajes
      // (validamos que sea el sender en el cliente)
      allow create: if isAuthenticated() && 
                       request.auth.uid == request.resource.data.senderId;
      
      // Cualquier usuario puede marcar mensajes como leídos
      allow update: if isAuthenticated();
      
      // Solo Admin puede eliminar mensajes
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: reports (Reportes)
    // ========================================
    match /reports/{reportId} {
      // Admin, Responsable y Secretaria pueden leer reportes
      allow read: if isAdmin() || isResponsable() || isSecretaria();
      
      // Admin y Responsable pueden crear reportes
      allow create: if isAdminOrResponsable();
      
      // Admin y Responsable pueden editar reportes
      allow update: if isAdminOrResponsable();
      
      // Solo Admin puede eliminar reportes
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: notifications (Notificaciones)
    // ========================================
    match /notifications/{notificationId} {
      // Los usuarios solo ven sus propias notificaciones
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
      
      // Admin puede crear notificaciones para cualquiera
      // Los usuarios pueden crear sus propias notificaciones
      allow create: if isAuthenticated() && 
                       (isAdmin() || request.resource.data.userId == request.auth.uid);
      
      // Los usuarios pueden actualizar sus propias notificaciones
      allow update: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid;
      
      // Los usuarios pueden eliminar sus propias notificaciones
      allow delete: if isAuthenticated() && 
                       (isAdmin() || resource.data.userId == request.auth.uid);
    }
    
    // ========================================
    // REGLA POR DEFECTO: DENEGAR TODO LO DEMÁS
    // ========================================
    // Cualquier colección no especificada arriba será denegada
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

