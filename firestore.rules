rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // REGLAS TEMPORALES PARA MIGRACIÓN DE ROLES
    // ========================================
    // ⚠️ IMPORTANTE: Estas reglas son TEMPORALES
    // Después de completar la migración de roles, ejecuta:
    // firebase deploy --only firestore:rules
    // usando el archivo firestore.rules.BACKUP
    // ========================================
    
    // Verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Verificar si el usuario es administrador
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    

    // ========================================
    // COLECCIÓN: users - PERMISOS AMPLIADOS TEMPORALMENTE
    // ========================================
    match /users/{userId} {
      // Todos pueden leer usuarios (necesario para mensajería)
      allow read: if isAuthenticated();
      
      // ⚠️ TEMPORAL: Permitir a cualquier usuario autenticado actualizar
      // Esto permite la migración de roles sin problemas
      allow create, update: if isAuthenticated();
      
      // Solo el propio usuario puede eliminar (por seguridad)
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // ========================================
    // COLECCIÓN: schools (Escuelas) - TEMPORAL
    // ========================================
    match /schools/{schoolId} {
      allow read, write: if isAuthenticated();
    }
    
    // ========================================
    // COLECCIÓN: teachers (Docentes) - TEMPORAL
    // ========================================
    match /teachers/{teacherId} {
      allow read, write: if isAuthenticated();
    }
    
    // ========================================
    // COLECCIÓN: conversations (Conversaciones)
    // ========================================
    match /conversations/{conversationId} {
      // Solo participantes pueden leer la conversación
      allow read: if isAuthenticated() && 
                     request.auth.uid in resource.data.participants;
      
      // Cualquier usuario autenticado puede crear conversaciones
      allow create: if isAuthenticated() && 
                       request.auth.uid in request.resource.data.participants;
      
      // Solo participantes pueden actualizar la conversación
      allow update: if isAuthenticated() && 
                       request.auth.uid in resource.data.participants;
      
      // Solo Admin puede eliminar conversaciones
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: messages (Mensajes)
    // ========================================
    match /messages/{messageId} {
      // Todos los usuarios autenticados pueden leer mensajes
      // (el filtrado por conversación se hace en el cliente)
      allow read: if isAuthenticated();
      
      // Cualquier usuario puede crear mensajes
      // (validamos que sea el sender en el cliente)
      allow create: if isAuthenticated() && 
                       request.auth.uid == request.resource.data.senderId;
      
      // Cualquier usuario puede marcar mensajes como leídos
      allow update: if isAuthenticated();
      
      // Solo Admin puede eliminar mensajes
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: reports (Reportes) - TEMPORAL
    // ========================================
    match /reports/{reportId} {
      allow read, write: if isAuthenticated();
    }
    
    // ========================================
    // COLECCIÓN: support_requests (Solicitudes de soporte)
    // ========================================
    match /support_requests/{requestId} {
      // Todos pueden crear solicitudes de soporte
      allow create: if true;
      
      // Solo usuarios autenticados pueden leer y actualizar
      allow read, update: if isAuthenticated();
      
      // Solo admin puede eliminar
      allow delete: if isAdmin();
    }
    
    // ========================================
    // COLECCIÓN: notifications (Notificaciones)
    // ========================================
    match /notifications/{notificationId} {
      // Los usuarios solo ven sus propias notificaciones
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
      
      // Admin puede crear notificaciones para cualquiera
      // Los usuarios pueden crear sus propias notificaciones
      allow create: if isAuthenticated() && 
                       (isAdmin() || request.resource.data.userId == request.auth.uid);
      
      // Los usuarios pueden actualizar sus propias notificaciones
      allow update: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid;
      
      // Los usuarios pueden eliminar sus propias notificaciones
      allow delete: if isAuthenticated() && 
                       (isAdmin() || resource.data.userId == request.auth.uid);
    }
    
    // ========================================
    // REGLA POR DEFECTO: DENEGAR TODO LO DEMÁS
    // ========================================
    // Cualquier colección no especificada arriba será denegada
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
